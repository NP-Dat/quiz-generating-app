[
    {
      "question": "How are single-line comments indicated in YAML?",
      "answers": [
        "Using // at the start of the line",
        "Using # at the start of the line",
        "Using /* ... */ block",
        "Using --- at the start of the line"
      ],
      "correct_answer": 1
    },
    {
      "question": "What is the fundamental structure of the root object in the provided example document?",
      "answers": [
        "A sequence (list/array)",
        "A scalar (string/number)",
        "A map (dictionary/object)",
        "A set"
      ],
      "correct_answer": 2
    },
    {
      "question": "How is scientific notation represented for numbers in YAML?",
      "answers": [
        "Using 'e' or 'E' followed by an exponent",
        "Using '^' followed by an exponent",
        "Using 'sci()' function",
        "Using 'exp:' prefix"
      ],
      "correct_answer": 0
    },
    {
      "question": "What prefix is used to denote a hexadecimal number in YAML?",
      "answers": [
        "0b",
        "0o",
        "0x",
        "hex:"
      ],
      "correct_answer": 2
    },
    {
      "question": "What does the YAML value `0123` evaluate to?",
      "answers": [
        "The string '0123'",
        "The integer 123",
        "The octal value 83",
        "The hexadecimal value 291"
      ],
      "correct_answer": 2
    },
    {
      "question": "How is the boolean value `true` typically represented in YAML?",
      "answers": [
        "TRUE",
        "1",
        "True",
        "true"
      ],
      "correct_answer": 3
    },
    {
      "question": "Which symbol can represent a null value in YAML, besides `null`?",
      "answers": [
        "?",
        "!",
        "~",
        "%"
      ],
      "correct_answer": 2
    },
    {
      "question": "Can keys in a YAML map contain spaces?",
      "answers": [
        "Yes, without any special handling",
        "Yes, but they must be enclosed in quotes",
        "Yes, but spaces must be escaped with backslashes",
        "No, keys cannot contain spaces"
      ],
      "correct_answer": 0
    },
    {
      "question": "What boolean value does the unquoted string `no` evaluate to in YAML?",
      "answers": [
        "true",
        "false",
        "null",
        "It remains the string 'no'"
      ],
      "correct_answer": 1
    },
    {
      "question": "How can you ensure the string `yes` is interpreted as a string literal and not a boolean?",
      "answers": [
        "Use `!!str yes`",
        "Enclose it in single or double quotes ('yes' or \"yes\")",
        "Capitalize it as `YES`",
        "Prefix it with a backslash: `\\yes`"
      ],
      "correct_answer": 1
    },
    {
      "question": "Do simple string values in YAML always require quotes?",
      "answers": [
        "Yes, all strings must be quoted",
        "No, simple strings often don't need quotes",
        "Only strings with spaces need quotes",
        "Only numeric strings need quotes"
      ],
      "correct_answer": 1
    },
    {
      "question": "How do you escape a single quote character within a single-quoted YAML string?",
      "answers": [
        "Using `\\'`",
        "Using `''` (doubling the single quote)",
        "Using `\"`",
        "Single quotes cannot be escaped within single-quoted strings"
      ],
      "correct_answer": 1
    },
    {
      "question": "Which type of quoted string supports escape sequences like `\\n`, `\\t`, `\\uXXXX`?",
      "answers": [
        "Single-quoted strings ('...')",
        "Double-quoted strings (\"...\")",
        "Literal blocks (|)",
        "Folded blocks (>)"
      ],
      "correct_answer": 1
    },
    {
      "question": "How are UTF-8 characters like `²` typically included in YAML strings?",
      "answers": [
        "They cannot be included",
        "Using HTML entities like `²`",
        "Directly inserting the character if the file encoding is UTF-8",
        "Using special tags like `!!utf8`"
      ],
      "correct_answer": 2
    },
    {
      "question": "When must string values containing special characters like `[`, `{`, `-`, `&` be enclosed in quotes?",
      "answers": [
        "Only when they appear at the beginning of the string",
        "Only when they appear at the end of the string",
        "Always, to avoid ambiguity with YAML syntax",
        "Never, YAML handles them automatically"
      ],
      "correct_answer": 2
    },
    {
      "question": "What character introduces a 'literal block' style for multiline strings?",
      "answers": [
        ">",
        "|",
        "\"",
        "'"
      ],
      "correct_answer": 1
    },
    {
      "question": "What happens to newline characters within a literal block (`|`) string?",
      "answers": [
        "They are replaced with spaces",
        "They are ignored",
        "They are preserved as literal newlines (\\n)",
        "They cause a parsing error"
      ],
      "correct_answer": 2
    },
    {
      "question": "What character introduces a 'folded block' style for multiline strings?",
      "answers": [
        ">",
        "|",
        "\"",
        "'"
      ],
      "correct_answer": 0
    },
    {
      "question": "In a 'folded block' (`>`), what generally happens to single newlines between lines of text?",
      "answers": [
        "They are kept as newline characters",
        "They are replaced by a single space",
        "They are removed entirely",
        "They are converted to tab characters"
      ],
      "correct_answer": 1
    },
    {
      "question": "In a 'folded block' (`>`), what happens to blank lines (double newlines)?",
      "answers": [
        "They are removed",
        "They are converted to a single space",
        "They are preserved as a single newline character",
        "They are preserved as two newline characters"
      ],
      "correct_answer": 2
    },
    {
      "question": "What does the chomping indicator `|-` do when used with a block scalar?",
      "answers": [
        "Keeps all trailing newlines",
        "Strips (removes) the final newline, and any trailing blank lines",
        "Keeps only the final newline, strips trailing blank lines",
        "Adds an extra newline at the end"
      ],
      "correct_answer": 1
    },
    {
      "question": "What does the chomping indicator `>+` do when used with a folded block scalar?",
      "answers": [
        "Keeps the final newline and any trailing blank lines",
        "Strips (removes) the final newline and any trailing blank lines",
        "Replaces newlines with spaces and strips the final newline",
        "Replaces newlines with spaces and adds a newline"
      ],
      "correct_answer": 0
    },
    {
      "question": "How is nesting typically represented in YAML collections?",
      "answers": [
        "Using curly braces `{}`",
        "Using square brackets `[]`",
        "Using indentation",
        "Using XML-style tags"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the preferred number of spaces for indentation in YAML?",
      "answers": [
        "1 space",
        "2 spaces",
        "4 spaces",
        "Tab character"
      ],
      "correct_answer": 1
    },
    {
      "question": "Can keys in a YAML map be non-string scalars like numbers?",
      "answers": [
        "No, keys must always be strings",
        "Yes, keys can be numbers or other scalar types",
        "Only if the number is enclosed in quotes",
        "Only if using JSON-style syntax"
      ],
      "correct_answer": 1
    },
    {
      "question": "What syntax indicates the start of a complex map key in YAML?",
      "answers": [
        ": followed by a space",
        "? followed by a space",
        "- followed by a space",
        "= followed by a space"
      ],
      "correct_answer": 1
    },
    {
      "question": "Can a complex map key in YAML span multiple lines?",
      "answers": [
        "No, keys must be single-line",
        "Yes, using a literal or folded block scalar after the '?' indicator",
        "Yes, but only if enclosed in triple quotes",
        "Only if the key is a sequence"
      ],
      "correct_answer": 1
    },
    {
      "question": "What character typically introduces an item in a YAML sequence (list/array)?",
      "answers": [
        "*",
        "+",
        ":",
        "-"
      ],
      "correct_answer": 3
    },
    {
      "question": "Does the `-` indicator for a sequence item count towards indentation?",
      "answers": [
        "No, indentation starts after the `- `",
        "Yes, the space after the `-` is the first level of indentation",
        "Yes, the `-` itself is considered part of the indentation",
        "Only if the sequence item is a map"
      ],
      "correct_answer": 2  
    },
    {
      "question": "Can a YAML sequence contain items of different data types (e.g., string, number, map)?",
      "answers": [
        "No, all items must be of the same type",
        "Yes, sequences can contain disparate types",
        "Only if explicitly declared with a tag",
        "Only if using JSON-style sequence syntax"
      ],
      "correct_answer": 1
    },
    {
      "question": "How can a sequence be nested inside another sequence item?",
      "answers": [
        "Using double hyphens `--`",
        "By indenting a new sequence under the parent item's `-`",
        "Using nested square brackets `[[]]`",
        "It's not possible to nest sequences"
      ],
      "correct_answer": 1
    },
    {
      "question": "Is YAML a superset of JSON?",
      "answers": [
        "Yes, any valid JSON is also valid YAML",
        "No, YAML and JSON are completely separate formats",
        "No, JSON is a superset of YAML",
        "Only for basic scalar types"
      ],
      "correct_answer": 0
    },
    {
      "question": "How can you write a map in YAML using JSON-style syntax?",
      "answers": [
        "Using `<key: value>`",
        "Using `(key: value)`",
        "Using `{key: value}`",
        "Using `map(key=value)`"
      ],
      "correct_answer": 2
    },
    {
      "question": "How can you write a sequence in YAML using JSON-style syntax?",
      "answers": [
        "Using `<item1, item2>`",
        "Using `(item1, item2)`",
        "Using `{item1, item2}`",
        "Using `[item1, item2]`"
      ],
      "correct_answer": 3
    },
    {
      "question": "In YAML's JSON-style syntax (`{ key: value }`), are quotes required around simple keys and string values?",
      "answers": [
        "Yes, always required like in JSON",
        "No, quotes are often optional, unlike strict JSON",
        "Only keys require quotes",
        "Only values require quotes"
      ],
      "correct_answer": 1
    },
    {
      "question": "What character is used to define an anchor in YAML?",
      "answers": [
        "*",
        "&",
        "@",
        "#"
      ],
      "correct_answer": 1
    },
    {
      "question": "What character is used to create an alias (refer to an anchor) in YAML?",
      "answers": [
        "*",
        "&",
        "@",
        "#"
      ],
      "correct_answer": 0
    },
    {
      "question": "What is the primary purpose of using anchors (`&`) and aliases (`*`) in YAML?",
      "answers": [
        "To define custom data types",
        "To include comments within data structures",
        "To easily duplicate content or structure within the document",
        "To encrypt sensitive data"
      ],
      "correct_answer": 2
    },
    {
      "question": "If `config: &myconfig { setting: true }` and `runtime: *myconfig`, what is the value of `runtime.setting`?",
      "answers": [
        "null",
        "false",
        "true",
        "It causes an error"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the 'Merge Key' syntax (`<<`) used for in YAML?",
      "answers": [
        "Defining a recursive structure",
        "Inserting all key-value pairs from one or more aliased maps into the current map",
        "Creating a deep copy of an anchor",
        "Specifying bitwise left-shift operations"
      ],
      "correct_answer": 1
    },
    {
      "question": "Given `base: &base { name: A, color: B }` and `item: { <<: *base, color: C }`, what is the value of `item.name`?",
      "answers": [
        "A",
        "B",
        "C",
        "null"
      ],
      "correct_answer": 0
    },
    {
      "question": "Given `base: &base { name: A, color: B }` and `item: { <<: *base, color: C }`, what is the value of `item.color`?",
      "answers": [
        "A",
        "B",
        "C",
        "null"
      ],
      "correct_answer": 2
    },
    {
      "question": "In the provided example, what is the final value of `foo.name` after merging?",
      "answers": [
        "Everyone has same name",
        "10",
        "John",
        "null"
      ],
      "correct_answer": 2
    },
    {
      "question": "In the provided example, what is the final value of `bar.age` after merging?",
      "answers": [
        "Everyone has same name",
        "10",
        "20",
        "null"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the general syntax for explicitly specifying a data type using a tag in YAML?",
      "answers": [
        "`<tagname> value`",
        "`{tagname} value`",
        "`!!tagname value`",
        "`#tagname value`"
      ],
      "correct_answer": 2
    },
    {
      "question": "Which YAML tag explicitly declares a value as an integer?",
      "answers": [
        "`!!integer`",
        "`!!number`",
        "`!!int`",
        "`!!scalar`"
      ],
      "correct_answer": 2
    },
    {
      "question": "Which YAML tag explicitly declares a value as a string?",
      "answers": [
        "`!!string`",
        "`!!str`",
        "`!!text`",
        "`!!scalar`"
      ],
      "correct_answer": 1
    },
    {
      "question": "What does the tag `!!bool` indicate?",
      "answers": [
        "A binary string",
        "A boolean value",
        "A block scalar",
        "A byte array"
      ],
      "correct_answer": 1
    },
    {
      "question": "Can YAML tags be specific to a programming language parser?",
      "answers": [
        "No, all tags are standardized by the YAML specification",
        "Yes, parsers can implement language-specific tags (e.g., `!!python/complex`)",
        "Only for collection types (maps, sequences)",
        "Only for scalar types (strings, numbers)"
      ],
      "correct_answer": 1
    },
    {
      "question": "In the example `? !!python/tuple [ 5, 7 ]: Fifty Seven`, what does the `!!python/tuple` tag apply to?",
      "answers": [
        "The value 'Fifty Seven'",
        "The entire key-value pair",
        "The complex key `[ 5, 7 ]`",
        "The number 5"
      ],
      "correct_answer": 2
    },
    {
      "question": "Can YAML automatically parse ISO 8601 formatted date and datetime strings?",
      "answers": [
        "No, dates/times must always be quoted strings",
        "No, dates/times require explicit `!!timestamp` tags",
        "Yes, ISO formats like `YYYY-MM-DD` or `YYYY-MM-DDTHH:MM:SSZ` are often parsed automatically",
        "Only if the document starts with `%YAML 1.3`"
      ],
      "correct_answer": 2
    },
    {
      "question": "What YAML tag is used to explicitly mark a date or datetime value?",
      "answers": [
        "`!!date`",
        "`!!time`",
        "`!!datetime`",
        "`!!timestamp`"
      ],
      "correct_answer": 3
    },
    {
      "question": "What does the `!!binary` tag indicate about the following string data?",
      "answers": [
        "It's a hexadecimal representation of binary data",
        "It's plain text that should be interpreted as binary",
        "It's a base64-encoded representation of binary data",
        "It's encrypted binary data"
      ],
      "correct_answer": 2
    },
    {
      "question": "How is the actual binary data commonly represented when using the `!!binary` tag in block style?",
      "answers": [
        "As a sequence of integers (byte values)",
        "As a continuous string of hex digits",
        "As a multiline literal block (`|`) containing base64 data",
        "As a JSON array of booleans"
      ],
      "correct_answer": 2
    },
    {
      "question": "How can a set be represented in YAML using the complex key syntax?",
      "answers": [
        "By prefixing each item with `- `",
        "By enclosing items in `{? ?}`",
        "By prefixing each item key with `? ` and providing no explicit value (or null)",
        "Using the `!!set` tag followed by a sequence"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the flow style (JSON-like) syntax for representing a set in YAML?",
      "answers": [
        "`[item1, item2, item3]`",
        "`(item1, item2, item3)`",
        "`<item1, item2, item3>`",
        "`{item1, item2, item3}`"
      ],
      "correct_answer": 3
    },
    {
      "question": "Internally, what data structure is a YAML set often equivalent to?",
      "answers": [
        "A sequence where order matters",
        "A map where all values are null",
        "A specialized binary tree",
        "An ordered map"
      ],
      "correct_answer": 1
    },
    {
      "question": "What does the `...` sequence indicate in a YAML document or stream?",
      "answers": [
        "Start of document",
        "End of document",
        "A required comment section",
        "Ellipsis in a string value"
      ],
      "correct_answer": 1
    },
    {
      "question": "What does the YAML value `0.25` represent in the example `0.25: a float key`?",
      "answers": [
        "The string '0.25'",
        "A sequence containing 0 and 25",
        "A floating-point number used as a map key",
        "An invalid key format"
      ],
      "correct_answer": 2
    },
    {
      "question": "What does the scalar value `~` represent in YAML?",
      "answers": [
        "An empty string",
        "The boolean value true",
        "The null value",
        "A reference to the home directory"
      ],
      "correct_answer": 2
    },
    {
      "question": "In the folded block `folded_style: > ...`, what happens to more-indented lines?",
      "answers": [
        "They are folded like the rest of the block",
        "Their indentation is stripped, and they are folded",
        "They keep their relative indentation and their newlines are preserved",
        "They cause a parsing error"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the purpose of the `!!python/complex` tag in the example?",
      "answers": [
        "To define a complex nested structure",
        "To indicate a standard YAML complex number",
        "To invoke a Python-specific parser for complex number types",
        "To mark a section requiring complex parsing logic"
      ],
      "correct_answer": 2
    },
    {
      "question": "Which notation represents the integer 291 in the example?",
      "answers": [
        "`scientific_notation: 1e+12`",
        "`hex_notation: 0x123`",
        "`octal_notation: 0123`",
        "`a_number_value: 100`"
      ],
      "correct_answer": 1
    },
    {
      "question": "Can YAML map keys be defined using literal block (`|`) scalars?",
      "answers": [
        "No, keys must be single-line scalars",
        "Yes, using the complex key indicator `?` followed by `|`",
        "Only if the value is also a literal block",
        "Only if the key contains no newlines"
      ],
      "correct_answer": 1
    },
    {
      "question": "What is the result of `!!str 0.5`?",
      "answers": [
        "The number 0.5",
        "The string '0.5'",
        "The integer 5",
        "null"
      ],
      "correct_answer": 1
    },
    {
      "question": "What is the value type of `gif_file` in the example?",
      "answers": [
        "A multiline string",
        "A sequence of characters",
        "A binary blob (represented as base64)",
        "A map containing image metadata"
      ],
      "correct_answer": 2
    },
    {
      "question": "In the sequence item `- - This is a sequence\n  - inside another sequence`, what does the structure represent?",
      "answers": [
        "A map nested within a sequence",
        "A string with escaped hyphens",
        "A sequence containing a single item, which is another sequence",
        "An invalid YAML structure"
      ],
      "correct_answer": 2
    },
    {
      "question": "What does the document `key with spaces: value` define?",
      "answers": [
        "A key 'key' with value 'with spaces: value'",
        "A key 'key with spaces' with value 'value'",
        "Three separate keys: 'key', 'with', 'spaces'",
        "An invalid syntax"
      ],
      "correct_answer": 1
    },
    {
      "question": "What is the effect of the `>` indicator in `folded_style` compared to `|` in `literal_block` regarding internal newlines?",
      "answers": [
        "`>` preserves newlines, `|` converts them to spaces",
        "`>` converts newlines to spaces, `|` preserves them",
        "Both preserve newlines",
        "Both convert newlines to spaces"
      ],
      "correct_answer": 1
    },
    {
      "question": "The chomping indicators (`-` or `+`) primarily affect what part of a block scalar's value?",
      "answers": [
        "Leading whitespace",
        "Internal indentation",
        "Trailing newline characters",
        "Escape sequence interpretation"
      ],
      "correct_answer": 2
    },
    {
      "question": "Can an anchor (`&anchor_name`) be defined on a complex structure like a map or sequence?",
      "answers": [
        "No, anchors only work on scalar values",
        "Yes, anchors can be defined on any YAML node (scalar, sequence, map)",
        "Only on sequences, not maps",
        "Only on maps, not sequences"
      ],
      "correct_answer": 1
    },
    {
      "question": "If a key exists in a map, and a merge key (`<<`) tries to merge an anchor containing the same key, what happens?",
      "answers": [
        "The merge fails with an error",
        "The value from the anchor overwrites the existing value",
        "The existing key and value are preserved; the merge for that key is skipped",
        "Both values are combined into a sequence"
      ],
      "correct_answer": 2
    },
    {
      "question": "Besides `true` and `false`, what other unquoted literal is commonly interpreted as boolean `true` (though not shown in this specific example)?",
      "answers": [
        "maybe",
        "ok",
        "on",
        "pass"
      ],
      "correct_answer": 2
    },
    {
      "question": "What is the purpose of using quotes around keys like `'Keys can be quoted too.'`?",
      "answers": [
        "It's mandatory for all keys",
        "To improve readability only",
        "To allow special characters (like `:`) or leading/trailing spaces within the key",
        "To indicate the key is optional"
      ],
      "correct_answer": 2
    },
    {
      "question": "What does `!!timestamp 2002-12-14` explicitly define?",
      "answers": [
        "A string '2002-12-14'",
        "An integer representing the year",
        "A date/timestamp object representing December 14, 2002",
        "A sequence [2002, 12, 14]"
      ],
      "correct_answer": 2
    },
    {
      "question": "In the set representation `? item1\n? item2`, what is the implicit value associated with `item1` and `item2`?",
      "answers": [
        "true",
        "false",
        "An empty string ''",
        "null"
      ],
      "correct_answer": 3
    },
    {
        "question": "Which YAML feature allows defining a block of data once and reusing it elsewhere in the document?",
        "answers": [
            "Tags (`!!`)",
            "Complex Keys (`?`)",
            "Anchors (`&`) and Aliases (`*`)",
            "Merge Keys (`<<`)"
        ],
        "correct_answer": 2
    },
    {
        "question": "What is the primary difference in how newlines are handled between literal style (`|`) and folded style (`>`) block scalars?",
        "answers": [
            "Literal preserves newlines, Folded removes them.",
            "Literal removes newlines, Folded preserves them.",
            "Literal preserves newlines, Folded replaces most with spaces.",
            "Literal replaces newlines with spaces, Folded preserves them."
        ],
        "correct_answer": 2
    }
  ]